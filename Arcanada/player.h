#include <SFML/Graphics.hpp>
#include "ball.h"

using namespace sf;

////////////////////////////////////////////////////Класс игрока////////////////////////
class Player { // класс Игрока
public:
    float x, y; //координаты игрока
    float w, h, dx, speed ;
    int dir ; //направление (direction) движения игрока
    String File; //файл с расширением
    Image image;//сфмл изображение
    Texture texture;//сфмл текстура
    Sprite sprite;//сфмл спрайт

    Player(String F, float X, float Y, float W, float H){ //Конструктор с параметрами для класса Player. При создании объекта класса мы будем задавать имя файла, координату Х и У, ширину и высоту
        dx=0;speed=0;dir=0;
        File = F;//имя файла+расширение
        w = W; h = H;//высота и ширина
        image.loadFromFile("images/" + File);//запихиваем в image наше изображение вместо File мы передадим то, что пропишем при создании объекта. В нашем случае "hero.png" и получится запись идентичная image.loadFromFile("images/hero/png");
        texture.loadFromImage(image);//закидываем наше изображение в текстуру
        sprite.setTexture(texture);//заливаем спрайт текстурой
        x = X; y = Y;//координата появления спрайта
    }


    void update() //обновляем переменные объекта (новые координаты, с
        {
        switch (dir)//реализуем поведение в зависимости от направления. (каждая цифра соответствует направлению)
        {
        case 0: dx = -speed; break;//по иксу задаем положительную скорость, по игреку зануляем. получаем, что персонаж идет только вправо
        case 1: dx = speed; break;//по иксу задаем отрицательную скорость, по игреку зануляем. получается, что персонаж идет только влево
        }
        interactionWithMap();//вызываем функцию, отвечающую за взаимодействие с картой
        x += dx;//то движение из прошлого урока. наше ускорение на время получаем смещение координат и как следствие движение
        speed = 0;//зануляем скорость, чтобы персонаж остановился.
        sprite.setPosition(x,y);
        }

    void interactionWithMap()
    {
        //for (int i = y / 32; i < (y + h) / 32 + 1; i++)//координата y тайла, в котором находится мяч
           // for (int j = x / 32; j<(x + w) / 32 + 1; j++)//координата x тайла, в котором находится мяч
            //{
               // if (TileMap[i][j] == '0')//Если "край карты"
               // {

               // }
            //}
    }

};
